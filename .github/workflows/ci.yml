name: CI
on:
  push:
    branches:
      - '**'
    tags:
      - 'v*'
    paths-ignore:
      - '**/CHANGELOG.md'
      - '**/package.json'
  pull_request:
  workflow_dispatch:

jobs:
  pre_run:
    runs-on: ubuntu-latest
    steps:
      - name: Cancel Previous Runs
        uses: styfle/cancel-workflow-action@ad6cb1b847ffb509a69b745b6ee2f1d14dfe14b8
        with:
          access_token: ${{ github.token }}

  build-publish:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          token: ${{ secrets.GH_TOKEN || secrets.GITHUB_TOKEN }}

      - name: Docker meta
        id: docker_meta
        uses: docker/metadata-action@v3
        with:
          images: ${{ github.repository }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}

      - name: Login to Dockerhub
        uses: docker/login-action@v1
        # if: github.event_name != 'pull_request'
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Build/Tag/Push Image
        uses: docker/build-push-action@v2
        with:
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.docker_meta.outputs.tags }}
          labels: ${{ steps.docker_meta.outputs.labels }}

      - name: Semantic Release
        uses: cycjimmy/semantic-release-action@v2
        # if: startsWith(github.ref, 'refs/tags/v')
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
          SEMANTIC_RELEASE_PACKAGE: ${{ github.event.repository.name }}
        with:
          extra_plugins: |
            @semantic-release/changelog
            @semantic-release/git

  deploy:
    runs-on: ubuntu-latest
    # if: startsWith(github.ref, 'refs/tags/v')
    # needs:
    #   - build-publish
    steps:
      - name: Checkout k8s repo
        uses: actions/checkout@v2
        with:
          token: ${{ secrets.GH_TOKEN }}
          repository: ${{ secrets.DEVOPS_K8S_REPO }}

      - name: Update Explorer versions
        run: 'sed -i "s@image: blockstack/explorer:.*@image: blockstack/explorer:$(echo ${GITHUB_REF#refs/*/v} | tr / -)@g" sites/explorer/staging/deployment.yaml'

      - name: Commit version update
        uses: stefanzweifel/git-auto-commit-action@v4
        with:
          commit_message: 'auto: update explorer version'
          branch: auto/explorer-update
          file_pattern: sites/explorer/*/deployment.yaml
          commit_user_name: ${{ secrets.DEVOPS_COMMIT_USER }}
          commit_user_email: ${{ secrets.DEVOPS_COMMIT_EMAIL }}
          commit_author: ${{ secrets.DEVOPS_COMMIT_USER }} <${{ secrets.DEVOPS_COMMIT_EMAIL }}>

      - name: ArgoCD - Install CLI
        uses: clowdhaus/argo-cd-action/@main
        env:
          # Only required for first step in job where API is called
          # All subsequent setps in a job will not re-download the CLI
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          command: version
          options: --client

      - name: Argocd - Login
        run: argocd --insecure login ${{ secrets.ARGOCD_SERVER }} --username ${{ secrets.ARGOCD_USERNAME }} --password ${{ secrets.ARGOCD_PASSWORD }}

      - name: Argocd - Sync Explorer
        run: argocd app sync staging.explorer | grep -v "http"
